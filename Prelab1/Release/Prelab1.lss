
Prelab1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000038  00800100  00000252  000002c6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000252  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
   4:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
   8:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
   c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  10:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  14:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  18:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  1c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  20:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  24:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  28:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  2c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  30:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  34:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  38:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  3c:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__vector_15>
  40:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  44:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  48:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  4c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  50:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  54:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  58:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  5c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  60:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  64:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  68:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  6c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  70:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  74:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  78:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>

0000007c <__ctors_end>:
  7c:	11 24       	eor	r1, r1
  7e:	1f be       	out	0x3f, r1	; 63
  80:	cf ef       	ldi	r28, 0xFF	; 255
  82:	d0 e1       	ldi	r29, 0x10	; 16
  84:	de bf       	out	0x3e, r29	; 62
  86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
  88:	11 e0       	ldi	r17, 0x01	; 1
  8a:	a0 e0       	ldi	r26, 0x00	; 0
  8c:	b1 e0       	ldi	r27, 0x01	; 1
  8e:	e2 e5       	ldi	r30, 0x52	; 82
  90:	f2 e0       	ldi	r31, 0x02	; 2
  92:	02 c0       	rjmp	.+4      	; 0x98 <.do_copy_data_start>

00000094 <.do_copy_data_loop>:
  94:	05 90       	lpm	r0, Z+
  96:	0d 92       	st	X+, r0

00000098 <.do_copy_data_start>:
  98:	a8 33       	cpi	r26, 0x38	; 56
  9a:	b1 07       	cpc	r27, r17
  9c:	d9 f7       	brne	.-10     	; 0x94 <.do_copy_data_loop>
  9e:	0e 94 f5 00 	call	0x1ea	; 0x1ea <main>
  a2:	0c 94 27 01 	jmp	0x24e	; 0x24e <_exit>

000000a6 <__bad_interrupt>:
  a6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000aa <DebugUSARTInit>:
  aa:	9b 01       	movw	r18, r22
  ac:	ac 01       	movw	r20, r24
  ae:	e0 e0       	ldi	r30, 0x00	; 0
  b0:	f1 e0       	ldi	r31, 0x01	; 1
  b2:	80 81       	ld	r24, Z
  b4:	91 81       	ldd	r25, Z+1	; 0x01
  b6:	a2 81       	ldd	r26, Z+2	; 0x02
  b8:	b3 81       	ldd	r27, Z+3	; 0x03
  ba:	28 17       	cp	r18, r24
  bc:	39 07       	cpc	r19, r25
  be:	4a 07       	cpc	r20, r26
  c0:	5b 07       	cpc	r21, r27
  c2:	49 f0       	breq	.+18     	; 0xd6 <DebugUSARTInit+0x2c>
  c4:	34 96       	adiw	r30, 0x04	; 4
  c6:	81 e0       	ldi	r24, 0x01	; 1
  c8:	e4 33       	cpi	r30, 0x34	; 52
  ca:	f8 07       	cpc	r31, r24
  cc:	91 f7       	brne	.-28     	; 0xb2 <DebugUSARTInit+0x8>
  ce:	20 e0       	ldi	r18, 0x00	; 0
  d0:	32 ec       	ldi	r19, 0xC2	; 194
  d2:	41 e0       	ldi	r20, 0x01	; 1
  d4:	50 e0       	ldi	r21, 0x00	; 0
  d6:	64 e0       	ldi	r22, 0x04	; 4
  d8:	22 0f       	add	r18, r18
  da:	33 1f       	adc	r19, r19
  dc:	44 1f       	adc	r20, r20
  de:	55 1f       	adc	r21, r21
  e0:	6a 95       	dec	r22
  e2:	d1 f7       	brne	.-12     	; 0xd8 <DebugUSARTInit+0x2e>
  e4:	60 e0       	ldi	r22, 0x00	; 0
  e6:	70 e4       	ldi	r23, 0x40	; 64
  e8:	89 e1       	ldi	r24, 0x19	; 25
  ea:	91 e0       	ldi	r25, 0x01	; 1
  ec:	0e 94 05 01 	call	0x20a	; 0x20a <__udivmodsi4>
  f0:	c9 01       	movw	r24, r18
  f2:	da 01       	movw	r26, r20
  f4:	01 97       	sbiw	r24, 0x01	; 1
  f6:	a1 09       	sbc	r26, r1
  f8:	b1 09       	sbc	r27, r1
  fa:	29 2f       	mov	r18, r25
  fc:	3a 2f       	mov	r19, r26
  fe:	4b 2f       	mov	r20, r27
 100:	55 27       	eor	r21, r21
 102:	01 96       	adiw	r24, 0x01	; 1
 104:	a1 1d       	adc	r26, r1
 106:	b1 1d       	adc	r27, r1
 108:	20 93 cd 00 	sts	0x00CD, r18
 10c:	81 50       	subi	r24, 0x01	; 1
 10e:	80 93 cc 00 	sts	0x00CC, r24
 112:	88 e1       	ldi	r24, 0x18	; 24
 114:	80 93 c9 00 	sts	0x00C9, r24
 118:	8e e0       	ldi	r24, 0x0E	; 14
 11a:	80 93 ca 00 	sts	0x00CA, r24
 11e:	08 95       	ret

00000120 <putCharDebug>:
 120:	98 2f       	mov	r25, r24
 122:	80 91 c8 00 	lds	r24, 0x00C8
 126:	85 ff       	sbrs	r24, 5
 128:	fc cf       	rjmp	.-8      	; 0x122 <putCharDebug+0x2>
 12a:	90 93 ce 00 	sts	0x00CE, r25
 12e:	08 95       	ret

00000130 <USART_Receive>:
 130:	80 91 c8 00 	lds	r24, 0x00C8
 134:	87 ff       	sbrs	r24, 7
 136:	fc cf       	rjmp	.-8      	; 0x130 <USART_Receive>
 138:	80 91 ce 00 	lds	r24, 0x00CE
 13c:	08 95       	ret

0000013e <initializeButtonAndLED>:
 13e:	80 91 24 00 	lds	r24, 0x0024
 142:	81 60       	ori	r24, 0x01	; 1
 144:	80 93 24 00 	sts	0x0024, r24
 148:	80 91 2a 00 	lds	r24, 0x002A
 14c:	8f 7e       	andi	r24, 0xEF	; 239
 14e:	80 93 2a 00 	sts	0x002A, r24
 152:	08 95       	ret

00000154 <lightLEDForButton>:
 154:	80 91 24 00 	lds	r24, 0x0024
 158:	81 60       	ori	r24, 0x01	; 1
 15a:	80 93 24 00 	sts	0x0024, r24
 15e:	80 91 2a 00 	lds	r24, 0x002A
 162:	8f 7e       	andi	r24, 0xEF	; 239
 164:	80 93 2a 00 	sts	0x002A, r24
 168:	90 91 29 00 	lds	r25, 0x0029
 16c:	92 95       	swap	r25
 16e:	91 70       	andi	r25, 0x01	; 1
 170:	80 91 25 00 	lds	r24, 0x0025
 174:	8e 7f       	andi	r24, 0xFE	; 254
 176:	89 2b       	or	r24, r25
 178:	80 93 25 00 	sts	0x0025, r24
 17c:	f5 cf       	rjmp	.-22     	; 0x168 <lightLEDForButton+0x14>

0000017e <initializeTimerAndLED>:
 17e:	20 9a       	sbi	0x04, 0	; 4
 180:	f8 94       	cli
 182:	10 92 85 00 	sts	0x0085, r1
 186:	10 92 84 00 	sts	0x0084, r1
 18a:	80 91 81 00 	lds	r24, 0x0081
 18e:	8b 7f       	andi	r24, 0xFB	; 251
 190:	80 93 81 00 	sts	0x0081, r24
 194:	80 91 81 00 	lds	r24, 0x0081
 198:	82 60       	ori	r24, 0x02	; 2
 19a:	80 93 81 00 	sts	0x0081, r24
 19e:	80 91 81 00 	lds	r24, 0x0081
 1a2:	81 60       	ori	r24, 0x01	; 1
 1a4:	80 93 81 00 	sts	0x0081, r24
 1a8:	80 91 6f 00 	lds	r24, 0x006F
 1ac:	81 60       	ori	r24, 0x01	; 1
 1ae:	80 93 6f 00 	sts	0x006F, r24
 1b2:	80 91 36 00 	lds	r24, 0x0036
 1b6:	81 60       	ori	r24, 0x01	; 1
 1b8:	80 93 36 00 	sts	0x0036, r24
 1bc:	78 94       	sei
 1be:	08 95       	ret

000001c0 <blinkLEDWithTimer>:
 1c0:	0e 94 bf 00 	call	0x17e	; 0x17e <initializeTimerAndLED>
 1c4:	ff cf       	rjmp	.-2      	; 0x1c4 <blinkLEDWithTimer+0x4>

000001c6 <__vector_15>:
 1c6:	1f 92       	push	r1
 1c8:	0f 92       	push	r0
 1ca:	0f b6       	in	r0, 0x3f	; 63
 1cc:	0f 92       	push	r0
 1ce:	11 24       	eor	r1, r1
 1d0:	8f 93       	push	r24
 1d2:	9f 93       	push	r25
 1d4:	85 b1       	in	r24, 0x05	; 5
 1d6:	91 e0       	ldi	r25, 0x01	; 1
 1d8:	89 27       	eor	r24, r25
 1da:	85 b9       	out	0x05, r24	; 5
 1dc:	9f 91       	pop	r25
 1de:	8f 91       	pop	r24
 1e0:	0f 90       	pop	r0
 1e2:	0f be       	out	0x3f, r0	; 63
 1e4:	0f 90       	pop	r0
 1e6:	1f 90       	pop	r1
 1e8:	18 95       	reti

000001ea <main>:
 1ea:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <blinkLEDWithTimer>
 1ee:	80 e0       	ldi	r24, 0x00	; 0
 1f0:	90 e0       	ldi	r25, 0x00	; 0
 1f2:	08 95       	ret

000001f4 <echoSerialData>:
 1f4:	60 e0       	ldi	r22, 0x00	; 0
 1f6:	72 ec       	ldi	r23, 0xC2	; 194
 1f8:	81 e0       	ldi	r24, 0x01	; 1
 1fa:	90 e0       	ldi	r25, 0x00	; 0
 1fc:	0e 94 55 00 	call	0xaa	; 0xaa <DebugUSARTInit>
 200:	0e 94 98 00 	call	0x130	; 0x130 <USART_Receive>
 204:	0e 94 90 00 	call	0x120	; 0x120 <putCharDebug>
 208:	fb cf       	rjmp	.-10     	; 0x200 <echoSerialData+0xc>

0000020a <__udivmodsi4>:
 20a:	a1 e2       	ldi	r26, 0x21	; 33
 20c:	1a 2e       	mov	r1, r26
 20e:	aa 1b       	sub	r26, r26
 210:	bb 1b       	sub	r27, r27
 212:	fd 01       	movw	r30, r26
 214:	0d c0       	rjmp	.+26     	; 0x230 <__udivmodsi4_ep>

00000216 <__udivmodsi4_loop>:
 216:	aa 1f       	adc	r26, r26
 218:	bb 1f       	adc	r27, r27
 21a:	ee 1f       	adc	r30, r30
 21c:	ff 1f       	adc	r31, r31
 21e:	a2 17       	cp	r26, r18
 220:	b3 07       	cpc	r27, r19
 222:	e4 07       	cpc	r30, r20
 224:	f5 07       	cpc	r31, r21
 226:	20 f0       	brcs	.+8      	; 0x230 <__udivmodsi4_ep>
 228:	a2 1b       	sub	r26, r18
 22a:	b3 0b       	sbc	r27, r19
 22c:	e4 0b       	sbc	r30, r20
 22e:	f5 0b       	sbc	r31, r21

00000230 <__udivmodsi4_ep>:
 230:	66 1f       	adc	r22, r22
 232:	77 1f       	adc	r23, r23
 234:	88 1f       	adc	r24, r24
 236:	99 1f       	adc	r25, r25
 238:	1a 94       	dec	r1
 23a:	69 f7       	brne	.-38     	; 0x216 <__udivmodsi4_loop>
 23c:	60 95       	com	r22
 23e:	70 95       	com	r23
 240:	80 95       	com	r24
 242:	90 95       	com	r25
 244:	9b 01       	movw	r18, r22
 246:	ac 01       	movw	r20, r24
 248:	bd 01       	movw	r22, r26
 24a:	cf 01       	movw	r24, r30
 24c:	08 95       	ret

0000024e <_exit>:
 24e:	f8 94       	cli

00000250 <__stop_program>:
 250:	ff cf       	rjmp	.-2      	; 0x250 <__stop_program>
