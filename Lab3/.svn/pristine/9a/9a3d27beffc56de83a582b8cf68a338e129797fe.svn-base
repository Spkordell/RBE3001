/*
 * accelerometer.c
 *
 *  Created on: Feb 12, 2014
 *      Author: Steven Kordell
 */


#include "main.h"

Accel accel;

void initAccelerometer() {
	accel.newDataAvailable = 0;
	//Initialize the ADC in auto-trigger mode for the specified channels (This lets us sample as fast as possible without using any busy waiting)
	initFreeRunMultiADCChannels(1 << ACCEL_X | 1 << ACCEL_Y | 1 << ACCEL_Z);
	//Set timer to sample at 500 hz
	accel.timerMaxCount = (F_CPU/(192*64))*((float)1/500); // = 3 for CTC = 192, prescale = 64, and frequency = 500
	accel.timerCurrentCount = 0;
	InitTimer(0,CTC,192);
	//adjust the prescaler to F_CPU/64 to reduce the number of interrupts
	TCCR0Bbits._CS02 = 0;
	TCCR0Bbits._CS01 = 1;
	TCCR0Bbits._CS00 = 1;
}


ISR(TIMER0_COMPA_vect) {
	if(accel.timerCurrentCount >= accel.timerMaxCount) {
		accel.timerCurrentCount = 0;
		//latch in the most recent ADC readings
		accel.x = ADCVars.ADCValues[ACCEL_X];
		accel.y = ADCVars.ADCValues[ACCEL_Y];
		accel.z = ADCVars.ADCValues[ACCEL_Z];
		//Set a flag to alert that new Data is available
		accel.newDataAvailable = 1;
	} else {
		accel.timerCurrentCount++;
	}
}
