/*
 * main.c
 *
 *  Created on: Jan 19, 2014
 *      Author: Steven Kordell
 */

#include "main.h"

//function prototypes
void printTimeData(unsigned short ADCValue);
void printPWMData();

#define POTCHAN 4 //define channel the potentiometer is connected to
#define POTANGLE 300 //degrees
#define PWMMODE
Globals globals; //Create struct to store global variables

int main() {
	initGlobals();	//Initialize globals
	DebugUSARTInit(DEFAULT_BAUD); //initialize USART
	initAutoADC(POTCHAN); //InitializeADC for auto-conversion

#ifdef PWMMODE
	initPWM('B',3,100,.50,576);
	configureButtonInterrupts(); //Configure the buttons for interrupts
	while(1) {
		setPWMDuty((float)globals.ADCValue/1023);
		printPWMData();
	}
#else
	//wait for start command from computer
	println("Press \"s\" to start collecting data."); println("");
	while (USART_Receive() != 's');
	initTimeStamp();
	while(1) {
		printTimeData(globals.ADCValue);
	}
#endif
	return 0;
}

ISR(PCINT3_vect) {
	if(PINDbits._P7 == 0) {
		setPWMFrequency(100);
	}
	if(PINDbits._P6 == 0) {
		setPWMFrequency(20);
	}
	if(PINDbits._P5 == 0) {
		setPWMFrequency(1);
	}
	if(PINDbits._P4 == 0) {
		setPWMFrequency(.5);
	}
}


/*
 * Transmits formated pot values over serial
 */
void printTimeData(unsigned short ADCValue) {
	p_ul(globals.Hour);
	print(":");
	p_ul(globals.Minute);
	print(":");
	p_ul(globals.Second);

	print(",");
	p_ul(globals.ADCValue);
	print(",");
	p_ul((globals.ADCValue*((float)5/1023))*1000);
	print(",");
	p_ul(globals.ADCValue*((float)POTANGLE/1023));
	println("");
}

void printPWMData() {
	//Prints the duty cycle, frequency, state, and pot value to the serial port.
	printfDEBUG_FL(globals.PWMDuty*100);
	print(",");
	printfDEBUG_FL(globals.PWMFrequency);
	print(",");
	if (PINBbits._P3) {
		print("HIGH");
	} else {
		print ("LOW");
	}
	print(",");
	p_ul(globals.ADCValue);
	println("");
}
